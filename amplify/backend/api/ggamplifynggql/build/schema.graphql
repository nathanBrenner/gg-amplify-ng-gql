type Giver {
  id: ID!
  name: String!
  exclude: String
  assignedTo: Giver
}

type GiverGroup {
  id: ID!
  name: String!
  givers: [Giver]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelGiverConnection {
  items: [Giver]
  nextToken: String
}

input ModelStringFilterInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
}

input ModelIDFilterInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
}

input ModelIntFilterInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  contains: Int
  notContains: Int
  between: [Int]
}

input ModelFloatFilterInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  contains: Float
  notContains: Float
  between: [Float]
}

input ModelBooleanFilterInput {
  ne: Boolean
  eq: Boolean
}

input ModelGiverFilterInput {
  id: ModelIDFilterInput
  name: ModelStringFilterInput
  exclude: ModelStringFilterInput
  and: [ModelGiverFilterInput]
  or: [ModelGiverFilterInput]
  not: ModelGiverFilterInput
}

type Query {
  getGiver(id: ID!): Giver
  listGivers(filter: ModelGiverFilterInput, limit: Int, nextToken: String): ModelGiverConnection
  getGiverGroup(id: ID!): GiverGroup
  listGiverGroups(filter: ModelGiverGroupFilterInput, limit: Int, nextToken: String): ModelGiverGroupConnection
}

input CreateGiverInput {
  id: ID
  name: String!
  exclude: String
}

input UpdateGiverInput {
  id: ID!
  name: String
  exclude: String
}

input DeleteGiverInput {
  id: ID
}

type Mutation {
  createGiver(input: CreateGiverInput!): Giver
  updateGiver(input: UpdateGiverInput!): Giver
  deleteGiver(input: DeleteGiverInput!): Giver
  createGiverGroup(input: CreateGiverGroupInput!): GiverGroup
  updateGiverGroup(input: UpdateGiverGroupInput!): GiverGroup
  deleteGiverGroup(input: DeleteGiverGroupInput!): GiverGroup
}

type Subscription {
  onCreateGiver: Giver @aws_subscribe(mutations: ["createGiver"])
  onUpdateGiver: Giver @aws_subscribe(mutations: ["updateGiver"])
  onDeleteGiver: Giver @aws_subscribe(mutations: ["deleteGiver"])
  onCreateGiverGroup: GiverGroup @aws_subscribe(mutations: ["createGiverGroup"])
  onUpdateGiverGroup: GiverGroup @aws_subscribe(mutations: ["updateGiverGroup"])
  onDeleteGiverGroup: GiverGroup @aws_subscribe(mutations: ["deleteGiverGroup"])
}

type ModelGiverGroupConnection {
  items: [GiverGroup]
  nextToken: String
}

input ModelGiverGroupFilterInput {
  id: ModelIDFilterInput
  name: ModelStringFilterInput
  and: [ModelGiverGroupFilterInput]
  or: [ModelGiverGroupFilterInput]
  not: ModelGiverGroupFilterInput
}

input CreateGiverGroupInput {
  id: ID
  name: String!
}

input UpdateGiverGroupInput {
  id: ID!
  name: String
}

input DeleteGiverGroupInput {
  id: ID
}
